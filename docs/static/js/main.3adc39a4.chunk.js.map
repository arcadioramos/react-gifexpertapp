{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EAAM,0CAA4CC,UAAUH,GAAY,qDAD3D,SAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OAFAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAGlB,sBAAKgB,UAAU,6CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCLHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAGZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KA2BtC,OAlBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFX,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAMtB,CAACtB,IAIGuB,EDvB0BK,CAAa5B,GAAjCa,EAHwB,EAG7BN,KAAae,EAHgB,EAGhBA,QAarB,OAVAN,QAAQC,IAAIK,GAWR,qCACI,6BAAKtB,IAEJsB,EAAU,mBAAGJ,UAAU,wCAAb,uBAAqE,KAG/E,qBAAKA,UAAU,YAAf,SAKOL,EAAOJ,KAAI,SAAAC,GAEP,OAAO,cAAC,EAAD,eAECA,GADCA,EAAIC,aE/BxBkB,EAAe,WAAM,MAGM3C,mBAAS,CAAC,WAHhB,mBAGvBQ,EAHuB,KAGXT,EAHW,KAS9B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YClB7B8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.3adc39a4.chunk.js","sourcesContent":["import React ,{useState}from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange =(e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        //console.log(\"submit hecho\");\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue,...categories]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = \"https://api.giphy.com/v1/gifs/search?q=\" + encodeURI(category) + \"&limit=10&api_key=lvMmwJozgp0HfJHBkw7two11FXMKNB2j\"\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    //console.log(gifs);\r\n    return gifs;\r\n    //console.log(gifs);\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log({id,title,url}) ;\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n        //Para renombrar una variable se utilizan los \":\"\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n    console.log(loading);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading ? <p className=\"card animate__animated animate__flash\"> Cargando</p> : null}\r\n\r\n\r\n            {<div className=\"card-grid\">\r\n\r\n\r\n                {\r\n\r\n                    images.map(img => {\r\n\r\n                        return <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n\r\n                    })\r\n\r\n                }\r\n\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                console.log(imgs);\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state; //{data:[],loading:true}\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = ['One Punch', 'Samurai X','Naruto'];\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n   /* const handleAdd = () => {\r\n        \r\n        setCategories([...categories, 'Dragon']);\r\n    }*/\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}></GifGrid>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n  \n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}